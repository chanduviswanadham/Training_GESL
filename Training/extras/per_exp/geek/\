#include <stdio.h>
#include <stdlib.h>

#if 0

int main(void)
{
	char buff[10];
	memset(buff,0,sizeof(buff));

	gets(buff);

	printf("\n The buffer entered is [%s]\n",buff);

	return 0;
}
#endif

#if 0
void main(void)
{
	char *ptr = (char*)malloc(10);

	if(NULL == ptr)
	{
		printf("\n Malloc failed \n");
		return;
	}
	else
	{

		free(ptr);
	}

	return;
}
#endif

#if 0
int main()
{
	int ch = 1;

	switch(ch) {

		case 1:
			printf("i am in case 1\n");
			return;

		default:
			printf("in default case\n");

	}
	printf("in main\n");
	return 0;
}

#endif

#if 0

int main()
{	
	int func() {
		printf("chandu viswanadham\n");
		return 0;
	}

	func();
	main(10);
	printf("happy\n");
	return 0;
}
#endif

#if 0
# include <stdio.h>
int main ()
{
	int a[] = { 00001, 00010, 00100, 01000 };
	int i;
	for ( i = 0 ; i < 4 ; i++)
		printf("%o\t", a[i]);
	return 0;
}
#endif

#if 0
#include <stdio.h>
int main()
{
	float arr[] = {12.4, 2.3, 4.5, 6.7};
	printf("%d\n", sizeof(arr)/sizeof(arr[0]));
	return 0;
}
#endif

#if 0
int main() 
{ 
	static a[3]={1}; 
	int b[3]={1}; 
	printf("%d %d",a[2],b[2]);
	return 0;
} 
#endif

#if 0
#define Max(a,b) a>b?a:b 
int main() 
{ 
	printf("%d\n", Max(900,100)+10); 
} 
#endif

#if 0
#define x 10); 
int main() 
{ 
	printf("%d\n", x 
	
} 
#endif

#if 0
#include "program.s"

			int main()
			{
			return 0;
			}

#endif

#if 0
#include <stdio.h>
			int main()
			{
			int i = 3;
			int j = 4;
			float f1 = i / j;
			float f2 = (float) i / j;
			printf("3 / 4 == %f or %f depending on the type used.\n", f1, f2);
			}
#endif

#if 0

#define f(a,b) a##b
#define g(a) #a
#define h(a) g(a)

int main()
{
	printf("%s\n",h(f(1,2)));
	printf("%s\n",g(f(1,2)));
	return 0;
}
#endif

#if 0
int main()
{
	int a[3] = {0001, 0010, 0090};  //zero is represented for octal in c, octal only contains interger constants from 0 to 7. 
	return 0;
}
#endif

#if 0
int main()
{
	int a = 'c';
	int b = 'cp';

	printf("a = %d\tb = %d", a, b);
	return 0;
}
#endif

#if 0
int main()
{
	char *str = "chandu \\nviswanadham\"";
	printf("%s\n", str);
	return 0;
}
#endif

#if 0


int main()
{
	enum { a, b, c, d = 0, e = 1, f, g, h = c };
	printf("a = %d\t d = %d\t f = %d\t h = %d\n", a, d, f, h);
	int *p = &a;
	int *q = &b;
//	int a = 10, b = 15;
	printf("sum = %d\n", sum(p, q));

//	printf("a  = %p \t h = %p", &a, &h);
	return 0;
}

int sum(int *a, int *b) {
	
	return (*a + *b);
}
#endif

#if 1

int main()
{
	int a[5] = {1, 2, 3, 4, 5};
	int *ptr = a;
	void *ptr1 = ptr;
	int i = 0;

	for(i = 0 ;i < 5; i++, ptr++) {
		printf("%d\t", *ptr);
	}
	
	printf("\n");
	
	for(i = 0 ;i < 5; i++, ((int *) ptr1)++) {
		printf("%d\t", *(int *)ptr1);
	}
	
	return 0;

}
#endif
